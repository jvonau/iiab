- name: Create Linux user {{ kolibri_user }} and add it to groups {{ apache_user }}, disk
  user:
    name: "{{ kolibri_user }}"
    groups:
      - "{{ apache_user }}"
      - disk
    state: present
    shell: /bin/false
    system: yes
    create_home: no

- name: Create {{ kolibri_home }} (for data) and {{ kolibri_venv_path }} (venv for program/config)
  file:
    path: "{{ item }}"
    owner: "{{ kolibri_user }}"
    group: "{{ apache_user }}"
    mode: 0755
    state: directory
  with_items:
    - "{{ kolibri_home }}"         # /library/kolibri
    - "{{ kolibri_venv_path }}"    # /usr/local/kolibri

- name: Install latest Kolibri using pip, to venv
  pip:
    name: kolibri
    virtualenv: "{{ kolibri_venv_path }}"
    virtualenv_site_packages: no
    state: latest
    extra_args: --no-cache-dir
  when: internet_available and not (kolibri_version is defined)

- name: Install Kolibri {{ kolibri_version }} using pip, to venv
  pip:
    name: kolibri
    virtualenv: "{{ kolibri_venv_path }}"
    virtualenv_site_packages: no
    version: "{{ kolibri_version }}"
    extra_args: --no-cache-dir
  when: internet_available and kolibri_version is defined

- name: 'Install from templates: kolibri.service unit file for systemd & sites-available/kolibri.conf for Apache'
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { src: 'kolibri.service.j2', dest: '/etc/systemd/system/kolibri.service' }
    - { src: 'kolibri.conf.j2', dest: '/etc/apache2/sites-available/kolibri.conf' }

- name: Run Kolibri migrations (WHY? WHAT DOES THIS DO?)
  shell: export KOLIBRI_HOME="{{ kolibri_home }}" && "{{ kolibri_exec_path }}" manage migrate
  ignore_errors: yes
  when: kolibri_provision | bool

- name: Set Kolibri default language
  shell: export KOLIBRI_HOME="{{ kolibri_home }}" && "{{ kolibri_exec_path }}" language setdefault "{{ kolibri_language }}"
  ignore_errors: yes
  when: kolibri_provision | bool

- name: Create Kolibri default facility name, admin account and language
  shell: >
    export KOLIBRI_HOME="{{ kolibri_home }}" &&
    "{{ kolibri_exec_path }}" manage provisiondevice --facility "{{ kolibri_facility }}"
    --superusername "{{ kolibri_admin_user }}" --superuserpassword "{{ kolibri_admin_password }}"
    --preset "{{ kolibri_preset }}" --language_id "{{ kolibri_language }}" --verbosity 0 --noinput
  ignore_errors: yes
  when: kolibri_provision | bool

- name: chown -R {{ kolibri_user }}:{{ apache_user }} {{ kolibri_home }}
  file:
    path: "{{ kolibri_home }}"
    owner: "{{ kolibri_user }}"
    group: "{{ apache_user }}"
    recurse: yes
  when: kolibri_provision | bool

- name: Add 'kolibri_installed' variable values to {{ iiab_installed }}
  lineinfile:
    dest: "{{ iiab_installed }}"
    regexp: '^kolibri_installed'
    line: 'kolibri_installed'
    state: present

